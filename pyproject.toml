[tool.poetry]
name = "automatic-exploit-generation"
version = "0.1.0"
description = "Module for generating payloads for exploiting vulnerable executables"
authors = ["OpenCRS"]
license = "MIT"
readme = "README.md"
packages = [{include = "automatic_exploit_generation"}]

[tool.poetry.dependencies]
python = "^3.10"
pwntools = "^4.10.0"
docker = "^6.1.2"
grpcio = "^1.54.2"
protobuf = "^4.23.2"
click = "^8.1.3"
hexdump = "^3.3"
requests = "<2.32"
angr = "^9.2.52"
claripy = "^9.2.52"
ipython = "^8.13.2"
r2pipe = "^1.8.0"
timeout-decorator = "^0.5.0"
tqdm = "^4.65.0"
commons = {path = "../commons"}
zeratool_lib = {path = "../zeratool_lib"}

[tool.poetry.dev-dependencies]
black = "^22.6.0"
isort = "^5.10.1"
pylint = "^2.14.4"
pyproject-flake8 = "^0.0.1-alpha.5"
flake8-annotations = "^2.9.1"
pytest = "^7.2.1"

[tool.poetry.group.dev.dependencies]
grpcio-tools = "^1.54.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
automatic_exploit_generation = "automatic_exploit_generation.cli:main"

[tool.pylint.MASTER]
init-hook="import sys; sys.path.append('.')"

[tool.pylint.MESSAGES_CONTROL]
disable="missing-function-docstring, missing-class-docstring, missing-module-docstring"

[tool.flake8]
extend-ignore = "ANN101,"
max-line-length=88
per-file-ignores = """
    ./**/__init__.py: F401
"""

[tool.black]
line-length = 79
preview = true
